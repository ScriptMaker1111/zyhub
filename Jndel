local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local GuiService = game:GetService("GuiService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local jandelEnabled = false

-- Stand Data
local STANDS = {
    sell = {id = "rbxassetid://105558952189063", path = workspace.NPCS.Steven.HumanoidRootPart.ProximityPrompt.SellNPC},
    seed = {id = "rbxassetid://108836820807457", path = workspace.NPCS.Sam.HumanoidRootPart.ProximityPrompt.SeedNPC},
    firework = {id = "rbxassetid://128624634606117", path = workspace["American Traveling Merchant"].Model["Uncle Sam"].Head.TravelingMerchantProximityPrompt.TravelingMerchantNPCDialogue},
    craft = {id = "rbxassetid://117011820894292", path = workspace.NPCS.Isaac.HumanoidRootPart.ProximityPrompt.CosmeticNPC},
    gear = {id = "rbxassetid://124893249566515", path = workspace.NPCS.Eloise.HumanoidRootPart.ProximityPrompt.GearNPC},
    summer = {id = "rbxassetid://109405318058943", path = workspace.SummerHarvestEvent.HarvestShop.Georgia.Head.SummerHarvestProximityPrompt.SummerHarvestNPCDialogue}
}

-- Stand loading functions
local function loadAsset(url, parent)
    local success, result = pcall(function()
        local InsertService = game:GetService("InsertService")
        local model = InsertService:LoadAsset(tonumber(url:match("%d+")))
        if model then
            local firstChild = model:GetChildren()[1]
            if firstChild then
                firstChild.Parent = parent
                model:Destroy()
                return firstChild
            end
        end
        return nil
    end)
    
    if success and result then
        return result
    else
        -- Fallback method
        local success2, result2 = pcall(function()
            return game:GetObjects(url)[1]
        end)
        
        if success2 and result2 then
            result2.Parent = parent
            return result2
        end
    end
    
    return nil
end

local function findProximityPrompt(parent)
    for _, child in pairs(parent:GetDescendants()) do
        if child:IsA("ProximityPrompt") then
            return child
        end
    end
    return nil
end

local function loadStand(standData, offset)
    local model = loadAsset(standData.id, workspace)
    if model then
        local character = player.Character
        if not character then
            return nil
        end
        
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then
            return nil
        end
        
        local playerCFrame = humanoidRootPart.CFrame
        local frontOffset = playerCFrame.LookVector * offset
        local targetCFrame = CFrame.new(playerCFrame.Position + frontOffset, playerCFrame.Position)
        
        -- Set position based on model type
        if model.PrimaryPart then
            model:SetPrimaryPartCFrame(targetCFrame)
        elseif model:FindFirstChild("HumanoidRootPart") then
            model.HumanoidRootPart.CFrame = targetCFrame
        elseif model:FindFirstChild("Torso") then
            model.Torso.CFrame = targetCFrame
        elseif model:FindFirstChild("Head") then
            model.Head.CFrame = targetCFrame
        elseif model:FindFirstChildOfClass("BasePart") then
            local primaryPart = model:FindFirstChildOfClass("BasePart")
            primaryPart.CFrame = targetCFrame
        else
            model:MoveTo(targetCFrame.Position)
        end
        
        -- Set Standz attribute
        model:SetAttribute("Standz", true)
        
        -- Handle proximity prompt cloning
        if standData.path then
            pcall(function()
                local proximityPrompt = findProximityPrompt(model)
                if proximityPrompt and standData.path then
                    local clonedScript = standData.path:Clone()
                    clonedScript.Parent = proximityPrompt
                end
            end)
        end
        
        return model
    end
    return nil
end

local function removeAllStands()
    local removedCount = 0
    for _, obj in pairs(workspace:GetChildren()) do
        if obj:GetAttribute("Standz") then
            obj:Destroy()
            removedCount = removedCount + 1
        end
    end
    return removedCount
end

-- Clean up any existing GUI
local existingGui = playerGui:FindFirstChild("JandelCommand")
if existingGui then
    existingGui:Destroy()
end

-- Main GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "JandelCommand"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.Parent = playerGui

-- Main Frame (reduced size by ~30%)
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainContainer"
mainFrame.Size = UDim2.new(0, 262, 0, 200)
mainFrame.Position = UDim2.new(0.5, -131, 0.5, -100)
mainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 14)
mainCorner.Parent = mainFrame

-- Enhanced Gradient Background
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(15, 15, 20)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(25, 20, 35)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 20))
}
gradient.Rotation = 45
gradient.Parent = mainFrame

-- Subtle Shadow Effect
local shadowFrame = Instance.new("Frame")
shadowFrame.Name = "ShadowEffect"
shadowFrame.Size = UDim2.new(1, 12, 1, 12)
shadowFrame.Position = UDim2.new(0, -9, 0, -9)
shadowFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
shadowFrame.BackgroundTransparency = 0.2
shadowFrame.BorderSizePixel = 0
shadowFrame.ZIndex = mainFrame.ZIndex - 1
shadowFrame.Parent = mainFrame

local shadowCorner = Instance.new("UICorner")
shadowCorner.CornerRadius = UDim.new(0, 18)
shadowCorner.Parent = shadowFrame

-- Enhanced Accent Border with Purple Gradient
local accentBorder = Instance.new("Frame")
accentBorder.Name = "AccentBorder"
accentBorder.Size = UDim2.new(1, 2, 1, 2)
accentBorder.Position = UDim2.new(0, -1, 0, -1)
accentBorder.BackgroundColor3 = Color3.fromRGB(147, 51, 234)
accentBorder.BorderSizePixel = 0
accentBorder.ZIndex = mainFrame.ZIndex - 1
accentBorder.Parent = mainFrame

local accentGradient = Instance.new("UIGradient")
accentGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(147, 51, 234)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(168, 85, 247)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(196, 125, 255))
}
accentGradient.Rotation = 90
accentGradient.Parent = accentBorder

local accentCorner = Instance.new("UICorner")
accentCorner.CornerRadius = UDim.new(0, 15)
accentCorner.Parent = accentBorder

-- Header Section
local headerFrame = Instance.new("Frame")
headerFrame.Name = "HeaderSection"
headerFrame.Size = UDim2.new(1, 0, 0, 51)
headerFrame.Position = UDim2.new(0, 0, 0, 0)
headerFrame.BackgroundColor3 = Color3.fromRGB(20, 15, 30)
headerFrame.BorderSizePixel = 0
headerFrame.Parent = mainFrame

local headerGradient = Instance.new("UIGradient")
headerGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 15, 30)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 25, 40))
}
headerGradient.Rotation = 90
headerGradient.Parent = headerFrame

local headerCorner = Instance.new("UICorner")
headerCorner.CornerRadius = UDim.new(0, 14)
headerCorner.Parent = headerFrame

-- Fix header corner (only top corners)
local headerMask = Instance.new("Frame")
headerMask.Size = UDim2.new(1, 0, 0, 14)
headerMask.Position = UDim2.new(0, 0, 1, -14)
headerMask.BackgroundColor3 = Color3.fromRGB(20, 15, 30)
headerMask.BorderSizePixel = 0
headerMask.Parent = headerFrame

-- Title with Symbol
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(0.75, 0, 0, 20)
titleLabel.Position = UDim2.new(0.05, 0, 0, 9)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "JANDEL COMMANDER"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 15
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = headerFrame

-- Subtitle
local subtitleLabel = Instance.new("TextLabel")
subtitleLabel.Name = "SubtitleLabel"
subtitleLabel.Size = UDim2.new(0.75, 0, 0, 15)
subtitleLabel.Position = UDim2.new(0.05, 0, 0, 29)
subtitleLabel.BackgroundTransparency = 1
subtitleLabel.Text = "Made by Zysume Hub || Special Update v10"
subtitleLabel.TextColor3 = Color3.fromRGB(156, 163, 175)
subtitleLabel.TextSize = 8
subtitleLabel.Font = Enum.Font.GothamBold
subtitleLabel.TextXAlignment = Enum.TextXAlignment.Left
subtitleLabel.Parent = headerFrame

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 22, 0, 22)
closeButton.Position = UDim2.new(1, -32, 0, 9)
closeButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
closeButton.BorderSizePixel = 0
closeButton.Text = "Ã—"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextSize = 13
closeButton.Font = Enum.Font.GothamBold
closeButton.Parent = headerFrame

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 8)
closeCorner.Parent = closeButton

-- Content Container
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, -24, 1, -63)
contentFrame.Position = UDim2.new(0, 12, 0, 55)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

-- Toggle Card
local toggleCard = Instance.new("Frame")
toggleCard.Name = "ToggleCard"
toggleCard.Size = UDim2.new(1, 0, 0, 37)
toggleCard.Position = UDim2.new(0, 0, 0, 0)
toggleCard.BackgroundColor3 = Color3.fromRGB(31, 25, 45)
toggleCard.BorderSizePixel = 0
toggleCard.Parent = contentFrame

local toggleGradient = Instance.new("UIGradient")
toggleGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(31, 25, 45)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(41, 35, 55))
}
toggleGradient.Rotation = 45
toggleGradient.Parent = toggleCard

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 8)
toggleCorner.Parent = toggleCard

-- Toggle Layout
local togglePadding = Instance.new("UIPadding")
togglePadding.PaddingTop = UDim.new(0, 5)
togglePadding.PaddingLeft = UDim.new(0, 9)
togglePadding.PaddingRight = UDim.new(0, 9)
togglePadding.Parent = toggleCard

local toggleHeader = Instance.new("TextLabel")
toggleHeader.Name = "ToggleHeader"
toggleHeader.Size = UDim2.new(0.7, 0, 0, 9)
toggleHeader.BackgroundTransparency = 1
toggleHeader.Text = "JANDEL MODE"
toggleHeader.TextColor3 = Color3.fromRGB(156, 163, 175)
toggleHeader.TextSize = 8
toggleHeader.Font = Enum.Font.GothamBold
toggleHeader.TextXAlignment = Enum.TextXAlignment.Left
toggleHeader.Parent = toggleCard

local toggleStatus = Instance.new("TextLabel")
toggleStatus.Name = "ToggleStatus"
toggleStatus.Size = UDim2.new(0.7, 0, 0, 17)
toggleStatus.Position = UDim2.new(0, 0, 0, 15)
toggleStatus.BackgroundTransparency = 1
toggleStatus.Text = "â—† Unlock Command"
toggleStatus.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleStatus.TextSize = 11
toggleStatus.Font = Enum.Font.GothamBold
toggleStatus.TextXAlignment = Enum.TextXAlignment.Left
toggleStatus.Parent = toggleCard

-- Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0, 39, 0, 19)
toggleButton.Position = UDim2.new(1, -39, 0.5, -9.5)
toggleButton.BackgroundColor3 = Color3.fromRGB(75, 85, 99)
toggleButton.BorderSizePixel = 0
toggleButton.Text = ""
toggleButton.Parent = toggleCard

local toggleButtonCorner = Instance.new("UICorner")
toggleButtonCorner.CornerRadius = UDim.new(0, 9)
toggleButtonCorner.Parent = toggleButton

local toggleKnob = Instance.new("Frame")
toggleKnob.Name = "ToggleKnob"
toggleKnob.Size = UDim2.new(0, 16, 0, 16)
toggleKnob.Position = UDim2.new(0, 1.5, 0.5, -8)
toggleKnob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
toggleKnob.BorderSizePixel = 0
toggleKnob.Parent = toggleButton

local toggleKnobCorner = Instance.new("UICorner")
toggleKnobCorner.CornerRadius = UDim.new(1, 0)
toggleKnobCorner.Parent = toggleKnob

-- Command List Card
local commandCard = Instance.new("Frame")
commandCard.Name = "CommandCard"
commandCard.Size = UDim2.new(1, 0, 0, 62)
commandCard.Position = UDim2.new(0, 0, 0, 46)
commandCard.BackgroundColor3 = Color3.fromRGB(31, 25, 45)
commandCard.BorderSizePixel = 0
commandCard.Parent = contentFrame

local commandGradient = Instance.new("UIGradient")
commandGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(31, 25, 45)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(41, 35, 55))
}
commandGradient.Rotation = 45
commandGradient.Parent = commandCard

local commandCorner = Instance.new("UICorner")
commandCorner.CornerRadius = UDim.new(0, 8)
commandCorner.Parent = commandCard

-- Command Layout
local commandPadding = Instance.new("UIPadding")
commandPadding.PaddingTop = UDim.new(0, 5)
commandPadding.PaddingLeft = UDim.new(0, 9)
commandPadding.PaddingRight = UDim.new(0, 9)
commandPadding.Parent = commandCard

local commandHeader = Instance.new("TextLabel")
commandHeader.Name = "CommandHeader"
commandHeader.Size = UDim2.new(1, 0, 0, 9)
commandHeader.BackgroundTransparency = 1
commandHeader.Text = "AVAILABLE COMMANDS"
commandHeader.TextColor3 = Color3.fromRGB(156, 163, 175)
commandHeader.TextSize = 8
commandHeader.Font = Enum.Font.GothamBold
commandHeader.TextXAlignment = Enum.TextXAlignment.Left
commandHeader.Parent = commandCard

local commandList = Instance.new("TextLabel")
commandList.Name = "CommandList"
commandList.Size = UDim2.new(1, 0, 0, 42)
commandList.Position = UDim2.new(0, 0, 0, 15)
commandList.BackgroundTransparency = 1
commandList.Text = "â—ˆ /jandel <text> - Send custom message\nâ—ˆ /stand <name> - Spawn stand near you\nâ—ˆ /rstands - Remove all spawned stands\nâ—ˆ Stands: Sell, Seed, Firework, Craft, Gear, Summer"
commandList.TextColor3 = Color3.fromRGB(255, 255, 255)
commandList.TextSize = 8
commandList.Font = Enum.Font.Gotham
commandList.TextXAlignment = Enum.TextXAlignment.Left
commandList.TextYAlignment = Enum.TextYAlignment.Top
commandList.TextWrapped = true
commandList.Parent = commandCard

-- Status Container
local statusFrame = Instance.new("Frame")
statusFrame.Name = "StatusFrame"
statusFrame.Size = UDim2.new(1, 0, 0, 19)
statusFrame.Position = UDim2.new(0, 0, 0, 119)
statusFrame.BackgroundTransparency = 1
statusFrame.Parent = contentFrame

-- Status Indicator
local statusIndicator = Instance.new("Frame")
statusIndicator.Name = "StatusIndicator"
statusIndicator.Size = UDim2.new(0, 8, 0, 8)
statusIndicator.Position = UDim2.new(0, 0, 0.2, -4)
statusIndicator.BackgroundColor3 = Color3.fromRGB(239, 68, 68)
statusIndicator.BorderSizePixel = 0
statusIndicator.Parent = statusFrame

local indicatorCorner = Instance.new("UICorner")
indicatorCorner.CornerRadius = UDim.new(1, 0)
indicatorCorner.Parent = statusIndicator

-- Status Text
local statusText = Instance.new("TextLabel")
statusText.Name = "StatusText"
statusText.Size = UDim2.new(1, -14, 0, 15)
statusText.Position = UDim2.new(0, 14, 0, 0)
statusText.BackgroundTransparency = 1
statusText.Text = "OFFLINE â€¢ Jandel mode is disabled"
statusText.TextColor3 = Color3.fromRGB(209, 213, 219)
statusText.TextSize = 8
statusText.Font = Enum.Font.GothamBold
statusText.TextXAlignment = Enum.TextXAlignment.Left
statusText.Parent = statusFrame

-- Variables untuk menyimpan connections
local connections = {}

-- Functions
local function updateStatusIndicator(color, status)
    statusIndicator.BackgroundColor3 = color
    statusText.Text = status
end

local function updateToggleButton(enabled)
    if enabled then
        -- Enable state
        toggleButton.BackgroundColor3 = Color3.fromRGB(147, 51, 234)
        TweenService:Create(toggleKnob, TweenInfo.new(0.3), {Position = UDim2.new(1, -17.5, 0.5, -8)}):Play()
        toggleStatus.Text = "â—† Enabled || Lock Command"
        updateStatusIndicator(Color3.fromRGB(34, 197, 94), "ONLINE â€¢ Ready to receive commands")
    else
        -- Disable state
        toggleButton.BackgroundColor3 = Color3.fromRGB(75, 85, 99)
        TweenService:Create(toggleKnob, TweenInfo.new(0.3), {Position = UDim2.new(0, 1.5, 0.5, -8)}):Play()
        toggleStatus.Text = "â—† Disabled || Unlock Command"
        updateStatusIndicator(Color3.fromRGB(239, 68, 68), "OFFLINE â€¢ Jandel mode is disabled")
    end
end

local function createButtonHoverEffect(button)
    local originalColor = button.BackgroundColor3
    local hoverColor = Color3.fromRGB(
        math.min(255, originalColor.R * 255 + 20),
        math.min(255, originalColor.G * 255 + 20),
        math.min(255, originalColor.B * 255 + 20)
    )
    
    connections[#connections + 1] = button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor}):Play()
    end)
    
    connections[#connections + 1] = button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = originalColor}):Play()
    end)
end

-- Notification function (fallback jika module tidak ada)
local function showNotification(message, color)
    -- Try to use the game's notification system first
    local success, Notification = pcall(function()
        return require(game.ReplicatedStorage.Modules.Notification)
    end)
    
    if success and Notification then
        Notification:CreateNotification(message)
    else
        -- Fallback: create simple notification
        local notifGui = Instance.new("ScreenGui")
        notifGui.Name = "JandelNotification"
        notifGui.Parent = playerGui
        
        local notifFrame = Instance.new("Frame")
        notifFrame.Size = UDim2.new(0, 300, 0, 50)
        notifFrame.Position = UDim2.new(0.5, -150, 0, -60)
        notifFrame.BackgroundColor3 = color or Color3.fromRGB(30, 30, 30)
        notifFrame.BorderSizePixel = 0
        notifFrame.Parent = notifGui
        
        local notifCorner = Instance.new("UICorner")
        notifCorner.CornerRadius = UDim.new(0, 8)
        notifCorner.Parent = notifFrame
        
        local notifText = Instance.new("TextLabel")
        notifText.Size = UDim2.new(1, -20, 1, 0)
        notifText.Position = UDim2.new(0, 10, 0, 0)
        notifText.BackgroundTransparency = 1
        notifText.Text = message
        notifText.TextColor3 = Color3.fromRGB(255, 255, 255)
        notifText.TextSize = 14
        notifText.Font = Enum.Font.Gotham
        notifText.TextXAlignment = Enum.TextXAlignment.Left
        notifText.TextWrapped = true
        notifText.Parent = notifFrame
        
        -- Animation
        local tween1 = TweenService:Create(notifFrame, TweenInfo.new(0.3), {Position = UDim2.new(0.5, -150, 0, 20)})
        tween1:Play()
        
        spawn(function()
            wait(3)
            local tween2 = TweenService:Create(notifFrame, TweenInfo.new(0.3), {Position = UDim2.new(0.5, -150, 0, -60)})
            tween2:Play()
            tween2.Completed:Connect(function()
                notifGui:Destroy()
            end)
        end)
    end
end

-- Chat Command Handler
local function onPlayerChatted(message)
    if not jandelEnabled then 
        return 
    end
    
    print("Chat detected:", message) -- Debug
    
    -- Handle /jandel command
    local jandelCommand = message:match("^/jandel%s+(.+)")
    if jandelCommand then
        print("Jandel command detected:", jandelCommand) -- Debug
        
        -- Show notification
        showNotification(jandelCommand, Color3.fromRGB(147, 51, 234))
        updateStatusIndicator(Color3.fromRGB(99, 102, 241), "COMMAND SENT â€¢ " .. jandelCommand)
        
        -- Reset status after 3 seconds
        spawn(function()
            wait(3)
            if jandelEnabled then
                updateStatusIndicator(Color3.fromRGB(34, 197, 94), "ONLINE â€¢ Ready to receive commands")
            end
        end)
        return
    end
    
    -- Handle /stand command
    local standCommand = message:match("^/stand%s+(.+)")
    if standCommand then
        print("Stand command detected:", standCommand) -- Debug
        
        local standName = standCommand:lower()
        local standData = STANDS[standName]
        
        if standData then
            spawn(function()
                updateStatusIndicator(Color3.fromRGB(255, 193, 7), "SPAWNING â€¢ " .. standCommand)
                
                local model = loadStand(standData, 5)
                if model then
                    updateStatusIndicator(Color3.fromRGB(34, 197, 94), "STAND SPAWNED â€¢ " .. standCommand)
                    showNotification("Stand spawned: " .. standCommand, Color3.fromRGB(34, 197, 94))
                else
                    updateStatusIndicator(Color3.fromRGB(239, 68, 68), "SPAWN FAILED â€¢ " .. standCommand)
                    showNotification("Failed to spawn stand: " .. standCommand, Color3.fromRGB(239, 68, 68))
                end
                
                -- Reset status after 3 seconds
                spawn(function()
                    wait(3)
                    if jandelEnabled then
                        updateStatusIndicator(Color3.fromRGB(34, 197, 94), "ONLINE â€¢ Ready to receive commands")
                    end
                end)
            end)
        else
            -- Invalid stand name
            updateStatusIndicator(Color3.fromRGB(239, 68, 68), "INVALID STAND â€¢ " .. standCommand)
            showNotification("Invalid stand name: " .. standCommand, Color3.fromRGB(239, 68, 68))
            
            -- Reset status after 3 seconds
            spawn(function()
                wait(3)
                if jandelEnabled then
                    updateStatusIndicator(Color3.fromRGB(34, 197, 94), "ONLINE â€¢ Ready to receive commands")
                end
            end)
        end
        return
    end
    
    -- Handle /rstands command
    if message:match("^/rstands%s*$") then
        print("Remove stands command detected") -- Debug
        
        spawn(function()
            updateStatusIndicator(Color3.fromRGB(255, 193, 7), "REMOVING â€¢ Stands")
            
            local removedCount = removeAllStands()
            
            if removedCount > 0 then
                updateStatusIndicator(Color3.fromRGB(34, 197, 94), "REMOVED â€¢ " .. removedCount .. " stands")
                showNotification("Removed " .. removedCount .. " stands", Color3.fromRGB(34, 197, 94))
            else
                updateStatusIndicator(Color3.fromRGB(239, 68, 68), "NO STANDS â€¢ Found to remove")
                showNotification("No stands found to remove", Color3.fromRGB(239, 68, 68))
            end
            
            -- Reset status after 3 seconds
            spawn(function()
                wait(3)
                if jandelEnabled then
                    updateStatusIndicator(Color3.fromRGB(34, 197, 94), "ONLINE â€¢ Ready to receive commands")
                end
            end)
        end)
        return
    end
end

-- Apply hover effects
createButtonHoverEffect(closeButton)

-- Toggle Button Event
connections[#connections + 1] = toggleButton.MouseButton1Click:Connect(function()
    jandelEnabled = not jandelEnabled
    updateToggleButton(jandelEnabled)
    
    if jandelEnabled then
        showNotification("Jandel Mode Activated! You can now use /jandel and /stand commands", Color3.fromRGB(147, 51, 234))
    else
        showNotification("Jandel Mode Deactivated!", Color3.fromRGB(239, 68, 68))
    end
end)

-- Connect chat event
connections[#connections + 1] = player.Chatted:Connect(onPlayerChatted)

-- Close Button Event
connections[#connections + 1] = closeButton.MouseButton1Click:Connect(function()
    -- Disconnect all connections
    for _, connection in pairs(connections) do
        if connection then
            connection:Disconnect()
        end
    end
    
    local exitTween = TweenService:Create(mainFrame, 
        TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In),
        {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0)
        }
    )
    exitTween:Play()
    
    exitTween.Completed:Connect(function()
        screenGui:Destroy()
    end)
end)

-- Initialize
updateToggleButton(false)

-- Entrance Animation
mainFrame.Size = UDim2.new(0, 0, 0, 0)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)

local entranceTween = TweenService:Create(mainFrame, 
    TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
    {
        Size = UDim2.new(0, 282, 0, 220),
        Position = UDim2.new(0.5, -131, 0.5, -100)
    }
)
entranceTween:Play()